<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Coderhouse - Proyecto final Nodejs</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css"
        integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="./template1.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
    <header>
        <%- include('./partials/header') %>
    </header>

    <section class="vh-100 gradient-custom">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12 col-md-8 col-lg-6 col-xl-12">
                    <div class="card bg-dark text-white" style="border-radius: 1rem;">
                        <div class="card-body p-5 ">
                            <h3 class="fw-bold mb-2 text-uppercase">Proyecto final - NodeJs - CODERHOUSE</h3>
                            <br>

                            <div class="mb-md-5 mt-md-4 pb-5">
                                <h4 class="fw-bold mb-2 text-uppercase">User story/brief: </h4>
                                <br>
                                <ul>
                                    <li>
                                        Contendrá las rutas necesarias que permitan listar los productos existentes,
                                        ingresar productos nuevos, borrar y modificar sus detalles, así como interactuar
                                        con el carrito de compras.
                                    </li>
                                    <br>
                                    <li>
                                        Se implementará una API RESTful con los verbos get, post, put y delete para
                                        cumplir con todas las acciones necesarias.
                                    </li>
                                    <br>
                                    <li>
                                        Debe brindar al frontend un mecanismo de ingreso autorizado al sistema basado en
                                        JWT (Json Web Token).
                                    </li>
                                    <br>
                                    <li>
                                        Los productos ingresados se almacenarán en una base de datos MongoDB.
                                    </li>
                                    <br>
                                    <li>
                                        El usuario podrá registrar sus credenciales de acceso (email y password) para
                                        luego poder ingresar a su cuenta. Estas credenciales serán guardadas en la base
                                        de datos MongoDB encriptando la contraseña.
                                    </li>
                                    <br>
                                    <li>
                                        El cliente tendrá una sesión activa de usuario con tiempo de expiración
                                        configurable.
                                    </li>
                                    <br>
                                    <li>
                                        Implementarás un canal de chat basado en websockets, el cual permita atender las
                                        consultas del cliente.
                                    </li>
                                    <br>
                                    <li>
                                        La arquitectura del servidor estará basada en capas (MVC)
                                    </li>
                                    <br>
                                    <li>
                                        El servidor podrá tomar configuraciones desde un archivo externo.
                                    </li>
                                    <br>
                                    <li>
                                        Dispondrá de una vista creada con pug, que permita ver la configuración del
                                        servidor.
                                    </li>
                                    <br>
                                    <li>
                                        Se enviará un mail a una casilla configurable, por cada registro nuevo de
                                        usuario y con cada orden de compra generada.
                                    </li>
                                    <br>
                                    <li>
                                        En caso de detectar algún error, el servidor enviará una vista implementada con
                                        ejs, que contenga el id y el detalle completo
                                    </li>
                                    <br>
                                    <li>
                                        Dos opciones para el frontend: desarrollo por parte del estudiante, ó se
                                        proporcionará uno para hacer las pruebas necesarias.
                                    </li>
                                </ul>
                            </div>

                            <div class="mb-md-5 mt-md-4 pb-5">
                                <h4 class="fw-bold mb-2 text-uppercase">Piezas sugeridas - te recomendamos incluir:
                                </h4>
                                <br>
                                <ul>
                                    <li>
                                        Node.js
                                    </li>
                                    <br>
                                    <li>
                                        MongoDB
                                    </li>
                                    <br>
                                    <li>
                                        Passport JWT
                                    </li>
                                    <br>
                                    <li>
                                        Mongoose
                                    </li>
                                    <br>
                                    <li>
                                        Bcrypt
                                    </li>
                                    <br>
                                    <li>
                                        Websocket
                                    </li>
                                    <br>
                                    <li>
                                        Dotenv
                                    </li>
                                    <br>
                                    <li>
                                        Handlebars, Pug, Ejs
                                    </li>
                                    <br>
                                    <li>
                                        Nodemailer
                                    </li>
                                </ul>
                            </div>

                            <div class="mb-md-5 mt-md-4 pb-5">
                                <h4 class="fw-bold mb-2 text-uppercase">Requisitos base: Los requisitos base serán parte
                                    de los criterios de evaluación para aprobar el proyecto.
                                </h4>
                                <br>

                                <h5 class="fw-bold mb-2 text-uppercase">Inicio Al momento de requerir la ruta base /
                                </h5>
                                <ul>
                                    <li>
                                        Permitir un menú de ingreso al sistema con email y password así como también la
                                        posibilidad de registro de un nuevo usuario.
                                    </li>
                                    <br>
                                    <li>
                                        El menú de registro consta del nombre completo del cliente, número telefónico,
                                        email y campo de password duplicado para verificar coincidencia.
                                    </li>
                                    <br>
                                    <li>
                                        Si un usuario se loguea exitosamente o está en sesión activa, la ruta / hará una
                                        re dirección a la ruta del carrito /productos
                                    </li>
                                    <br>
                                    <li>
                                        La ruta /productos devolverá el listado de todos los productos disponibles para
                                        la compra.
                                    </li>
                                    <br>
                                    <li>
                                        La ruta /productos/:categoria devolverá los productos por la categoría
                                        requerida.
                                    </li>
                                    <br>
                                    <li>
                                        Los ítems podrán ser agregados al carrito de compras y listados a través de la
                                        ruta /carrito.
                                    </li>
                                    <br>
                                    <li>
                                        Se podrán modificar y borrar por su id a través de la ruta /carrito:id.
                                    </li>
                                </ul>
                                <br>

                                <h5 class="fw-bold mb-2 text-uppercase"> Flow
                                </h5>
                                <ul>
                                    <li>
                                        Se puede solicitar un producto específico con la ruta /productos/:id, donde id
                                        es el id del item generado por MongoDB y devolver la descripción del producto (
                                        foto, precio, selector de cantidad).
                                    </li>
                                    <br>
                                    <li>
                                        Si se ingresa a /productos/:id y el producto no existe en MongoDB, debemos
                                        responder un mensaje adecuado que indique algo relacionado a que el producto no
                                        existe.
                                    </li>
                                    <br>
                                </ul>

                                <h5 class="fw-bold mb-2 text-uppercase"> MongoDB - colecciones:
                                </h5>
                                <ul>
                                    <li>
                                        usuarios: clientes registrados
                                    </li>
                                    <br>
                                    <li>
                                        productos: catálogo completo, Link para foto (puede almacenarse de modo estático
                                        en la página en una subruta /images/:productoid ), Precio unitario, Descripción,
                                        Categoría
                                    </li>
                                    <br>
                                    <li>
                                        mensajes: chat del usuario (preguntas y respuestas), Email: del usuario que
                                        pregunta o al que se responde, Tipo (‘usuario’ para preguntas ó ‘sistema’ para
                                        respuestas), Fecha y hora, Cuerpo del mensaje
                                    </li>
                                    <br>
                                    <li>
                                        carrito: orden temporal de compra, Email, Fecha y hora, Items con sus
                                        cantidades, Dirección de entrega
                                    </li>
                                    <br>
                                    <li>
                                        ordenes: las órdenes generadas, que deben incluir los productos, descripciones
                                        y los precios al momento de la compra, Ítems: las órdenes deben poder tener
                                        productos surtidos, cada uno con su
                                        cantidad. Por ejemplo: remeras x 2 y gorra x 1, Número de orden: Se extrae de la
                                        cantidad de órdenes almacenadas, Fecha y hora, estado ( por defecto en
                                        ‘generada’), Email de quién realizó la orden

                                    </li>
                                    <br>
                                    <li>
                                        Finalizada la orden, enviar un mail a la dirección de mi cuenta con los detalles
                                        de la orden.

                                    </li>
                                    <br>
                                    <li>
                                        Se dispondrá de un archivo de configuración externo con opciones para
                                        desarrollo y otras para producción, que serán visualizadas a través de una vista
                                        construida con handlebars. Como parámetros de configuración estará el puerto de
                                        escucha del servidor, la url de la base de datos, el mail que recibirá
                                        notificaciones del backend, tiempo de expiración de sesión y los que sea
                                        necesario incluir.
                                    </li>
                                    <br>
                                    <li>
                                        Vamos a contar con un canal de chat general donde el usuario enviará los
                                        mensajes en la ruta /chat y en /chat/:email podrá ver sólo los suyos. Se
                                        utilizará la colección mensajes en MongoDB. La tecnología de comunicación a
                                        utilizar será Websockets. El servidor implementará una vista, utilizando
                                        handlebars, para visualizar todos los mensajes y poder responder individualmente
                                        a ellos, eligiendo el email de respuesta.
                                    </li>
                                </ul>
                                <br>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

</body>

</html>